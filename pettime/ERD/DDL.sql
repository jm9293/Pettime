-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- Designer Table Create SQL
CREATE TABLE Designer
(
    num         INT              NOT NULL, 
    ID          VARCHAR2(30)     NOT NULL, 
    PASSWORD    VARCHAR2(120)    NOT NULL, 
    NAME        VARCHAR2(20)     NOT NULL, 
    EMAIL       VARCHAR2(30)     NOT NULL, 
    PHONE       VARCHAR2(30)     NOT NULL, 
    INTRO       VARCHAR2(300)    NOT NULL, 
    ENABLED     CHAR(1)          NOT NULL, 
    CONSTRAINT DESIGNER_PK PRIMARY KEY (ID)
)
/

CREATE SEQUENCE Designer_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER Designer_AI_TRG
BEFORE INSERT ON Designer 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT Designer_SEQ.NEXTVAL
    INTO :NEW.num
    FROM DUAL;
END;
/

--DROP TRIGGER Designer_AI_TRG;
/

--DROP SEQUENCE Designer_SEQ;
/

COMMENT ON TABLE Designer IS '디자이너 정보'
/

COMMENT ON COLUMN Designer.num IS '디자이너번호'
/

COMMENT ON COLUMN Designer.ID IS '아이디'
/

COMMENT ON COLUMN Designer.PASSWORD IS '비밀번호'
/

COMMENT ON COLUMN Designer.NAME IS '이름'
/

COMMENT ON COLUMN Designer.EMAIL IS '이메일'
/

COMMENT ON COLUMN Designer.PHONE IS '전화번호'
/

COMMENT ON COLUMN Designer.INTRO IS '소개글'
/

COMMENT ON COLUMN Designer.ENABLED IS '활성정보'
/

ALTER TABLE Designer
    ADD CONSTRAINT UC_EMAIL_DE UNIQUE (EMAIL)
/


-- Designer Table Create SQL
CREATE TABLE USERDATA
(
    USERNUM     INT              NOT NULL, 
    ID          VARCHAR2(30)     NOT NULL, 
    PASSWORD    VARCHAR2(120)    NOT NULL, 
    NAME        VARCHAR2(20)     NOT NULL, 
    PHONE       VARCHAR2(30)     NOT NULL, 
    EMAIL       VARCHAR2(60)     NOT NULL, 
    ENABLED     CHAR(1)          NOT NULL, 
    CONSTRAINT USERDATA_PK PRIMARY KEY (ID)
)
/

CREATE SEQUENCE USERDATA_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER USERDATA_AI_TRG
BEFORE INSERT ON USERDATA 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT USERDATA_SEQ.NEXTVAL
    INTO :NEW.USERNUM
    FROM DUAL;
END;
/

--DROP TRIGGER USERDATA_AI_TRG;
/

--DROP SEQUENCE USERDATA_SEQ;
/

COMMENT ON TABLE USERDATA IS '유저정보'
/

COMMENT ON COLUMN USERDATA.USERNUM IS '식별번호'
/

COMMENT ON COLUMN USERDATA.ID IS '아이디'
/

COMMENT ON COLUMN USERDATA.PASSWORD IS '비밀번호'
/

COMMENT ON COLUMN USERDATA.NAME IS '이름'
/

COMMENT ON COLUMN USERDATA.PHONE IS '전화번호'
/

COMMENT ON COLUMN USERDATA.EMAIL IS '이메일'
/

COMMENT ON COLUMN USERDATA.ENABLED IS '활성여부'
/

ALTER TABLE USERDATA
    ADD CONSTRAINT UC_EMAIL UNIQUE (EMAIL)
/


-- Designer Table Create SQL
CREATE TABLE RESLIST
(
    NUM        INT              NOT NULL, 
    STIME      DATE             NOT NULL, 
    ADDRESS    VARCHAR2(200)    NOT NULL, 
    USERID     VARCHAR2(30)     NOT NULL, 
    DEGID      VARCHAR2(30)     NOT NULL, 
    PETNAME    VARCHAR2(60)     NOT NULL, 
    PETKIND    VARCHAR2(60)     NOT NULL, 
    PETMEMO    VARCHAR2(300)    NOT NULL, 
    TPRICE     INT              NOT NULL, 
    STATE      VARCHAR2(20)     NOT NULL, 
    CONSTRAINT RESLIST_PK PRIMARY KEY (NUM)
)
/

CREATE SEQUENCE RESLIST_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER RESLIST_AI_TRG
BEFORE INSERT ON RESLIST 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT RESLIST_SEQ.NEXTVAL
    INTO :NEW.NUM
    FROM DUAL;
END;
/

--DROP TRIGGER RESLIST_AI_TRG;
/

--DROP SEQUENCE RESLIST_SEQ;
/

COMMENT ON TABLE RESLIST IS '예약신청서'
/

COMMENT ON COLUMN RESLIST.NUM IS '예약번호'
/

COMMENT ON COLUMN RESLIST.STIME IS '신청일시'
/

COMMENT ON COLUMN RESLIST.ADDRESS IS '출장주소'
/

COMMENT ON COLUMN RESLIST.USERID IS '신청자 아이디'
/

COMMENT ON COLUMN RESLIST.DEGID IS '디자이너 아이디'
/

COMMENT ON COLUMN RESLIST.PETNAME IS '견명'
/

COMMENT ON COLUMN RESLIST.PETKIND IS '견종'
/

COMMENT ON COLUMN RESLIST.PETMEMO IS '메모'
/

COMMENT ON COLUMN RESLIST.TPRICE IS '총금액'
/

COMMENT ON COLUMN RESLIST.STATE IS '예약상태'
/

ALTER TABLE RESLIST
    ADD CONSTRAINT FK_RESLIST_USERID_USERDATA_ID FOREIGN KEY (USERID)
        REFERENCES USERDATA (ID)
/

ALTER TABLE RESLIST
    ADD CONSTRAINT FK_RESLIST_DEGID_Designer_ID FOREIGN KEY (DEGID)
        REFERENCES Designer (ID)
/


-- Designer Table Create SQL
CREATE TABLE ADMIN
(
    ID          VARCHAR2(30)     NOT NULL, 
    PASSWORD    VARCHAR2(120)    NOT NULL, 
    ENABLED     CHAR(1)          NOT NULL, 
    CONSTRAINT ADMIN_PK PRIMARY KEY (ID)
)
/

COMMENT ON TABLE ADMIN IS '관리자정보'
/

COMMENT ON COLUMN ADMIN.ID IS '관리자ID'
/

COMMENT ON COLUMN ADMIN.PASSWORD IS '비밀번호'
/

COMMENT ON COLUMN ADMIN.ENABLED IS '활성상태'
/


-- Designer Table Create SQL
CREATE TABLE RESDETAIL
(
    NUM        INT             NOT NULL, 
    RESNUM     INT             NOT NULL, 
    CONTENT    VARCHAR2(60)    NOT NULL, 
    PRICE      INT             NOT NULL, 
    CONSTRAINT RESDETAIL_PK PRIMARY KEY (NUM)
)
/

CREATE SEQUENCE RESDETAIL_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER RESDETAIL_AI_TRG
BEFORE INSERT ON RESDETAIL 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT RESDETAIL_SEQ.NEXTVAL
    INTO :NEW.NUM
    FROM DUAL;
END;
/

--DROP TRIGGER RESDETAIL_AI_TRG;
/

--DROP SEQUENCE RESDETAIL_SEQ;
/

COMMENT ON TABLE RESDETAIL IS '예약세부정보'
/

COMMENT ON COLUMN RESDETAIL.NUM IS '식별번호'
/

COMMENT ON COLUMN RESDETAIL.RESNUM IS '예약번호'
/

COMMENT ON COLUMN RESDETAIL.CONTENT IS '내용'
/

COMMENT ON COLUMN RESDETAIL.PRICE IS '금액'
/

ALTER TABLE RESDETAIL
    ADD CONSTRAINT FK_RESDETAIL_RESNUM_RESLIST_NU FOREIGN KEY (RESNUM)
        REFERENCES RESLIST (NUM)
/


-- Designer Table Create SQL
CREATE TABLE NOTICE
(
    NUM        INT              NOT NULL, 
    TITLE      VARCHAR2(60)     NOT NULL, 
    CONTENT    VARCHAR2(300)    NOT NULL, 
    VIEWCNT    INT              NOT NULL, 
    WRDATE     DATE             NOT NULL, 
    CONSTRAINT NOTICE_PK PRIMARY KEY (NUM)
)
/

CREATE SEQUENCE NOTICE_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER NOTICE_AI_TRG
BEFORE INSERT ON NOTICE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT NOTICE_SEQ.NEXTVAL
    INTO :NEW.NUM
    FROM DUAL;
END;
/

--DROP TRIGGER NOTICE_AI_TRG;
/

--DROP SEQUENCE NOTICE_SEQ;
/

COMMENT ON TABLE NOTICE IS '공지사항'
/

COMMENT ON COLUMN NOTICE.NUM IS '식별번호'
/

COMMENT ON COLUMN NOTICE.TITLE IS '제목'
/

COMMENT ON COLUMN NOTICE.CONTENT IS '내용'
/

COMMENT ON COLUMN NOTICE.VIEWCNT IS '조회수'
/

COMMENT ON COLUMN NOTICE.WRDATE IS '작성일'
/


-- Designer Table Create SQL
CREATE TABLE MENU
(
    NUM        INT             NOT NULL, 
    SUBJECT    VARCHAR2(60)    NOT NULL, 
    PRICE      INT             NOT NULL, 
    CONSTRAINT MENU_PK PRIMARY KEY (NUM)
)
/

CREATE SEQUENCE MENU_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER MENU_AI_TRG
BEFORE INSERT ON MENU 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT MENU_SEQ.NEXTVAL
    INTO :NEW.NUM
    FROM DUAL;
END;
/

--DROP TRIGGER MENU_AI_TRG;
/

--DROP SEQUENCE MENU_SEQ;
/

COMMENT ON TABLE MENU IS '미용메뉴'
/

COMMENT ON COLUMN MENU.NUM IS '식별번호'
/

COMMENT ON COLUMN MENU.SUBJECT IS '미용항목'
/

COMMENT ON COLUMN MENU.PRICE IS '금액'
/


-- Designer Table Create SQL
CREATE TABLE DAUTH
(
    ID           VARCHAR2(30)     NOT NULL, 
    authority    VARCHAR2(100)    NOT NULL, 
    CONSTRAINT DAUTH_PK PRIMARY KEY (ID, authority)
)
/

COMMENT ON TABLE DAUTH IS '디자이너 계정권한'
/

COMMENT ON COLUMN DAUTH.ID IS '아이디'
/

COMMENT ON COLUMN DAUTH.authority IS '권한'
/

ALTER TABLE DAUTH
    ADD CONSTRAINT FK_DAUTH_ID_Designer_ID FOREIGN KEY (ID)
        REFERENCES Designer (ID)
/


-- Designer Table Create SQL
CREATE TABLE UAUTH
(
    ID           VARCHAR2(30)     NOT NULL, 
    authority    VARCHAR2(100)    NOT NULL, 
    CONSTRAINT UAUTH_PK PRIMARY KEY (ID, authority)
)
/

COMMENT ON TABLE UAUTH IS '유저 계정권한'
/

COMMENT ON COLUMN UAUTH.ID IS '아이디'
/

COMMENT ON COLUMN UAUTH.authority IS '권한'
/

ALTER TABLE UAUTH
    ADD CONSTRAINT FK_UAUTH_ID_USERDATA_ID FOREIGN KEY (ID)
        REFERENCES USERDATA (ID)
/


-- Designer Table Create SQL
CREATE TABLE AAUTH
(
    ID           VARCHAR2(30)     NOT NULL, 
    authority    VARCHAR2(100)    NOT NULL, 
    CONSTRAINT AAUTH_PK PRIMARY KEY (ID, authority)
)
/

COMMENT ON TABLE AAUTH IS '관리자 계정권한'
/

COMMENT ON COLUMN AAUTH.ID IS '아이디'
/

COMMENT ON COLUMN AAUTH.authority IS '권한'
/

ALTER TABLE AAUTH
    ADD CONSTRAINT FK_AAUTH_ID_ADMIN_ID FOREIGN KEY (ID)
        REFERENCES ADMIN (ID)
/


-- Designer Table Create SQL
CREATE TABLE DaySchedule
(
    num      INT             NOT NULL, 
    DEGID    VARCHAR2(30)    NOT NULL, 
    Day      DATE            NOT NULL, 
    TIME1    INT             NULL, 
    TIME2    INT             NULL, 
    TIME3    INT             NULL, 
    CONSTRAINT DAYSCHEDULE_PK PRIMARY KEY (num)
)
/

CREATE SEQUENCE DaySchedule_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER DaySchedule_AI_TRG
BEFORE INSERT ON DaySchedule 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT DaySchedule_SEQ.NEXTVAL
    INTO :NEW.num
    FROM DUAL;
END;
/

--DROP TRIGGER DaySchedule_AI_TRG;
/

--DROP SEQUENCE DaySchedule_SEQ;
/

COMMENT ON TABLE DaySchedule IS '일간스케줄'
/

COMMENT ON COLUMN DaySchedule.num IS '식별번호'
/

COMMENT ON COLUMN DaySchedule.DEGID IS '디자이너 아이디'
/

COMMENT ON COLUMN DaySchedule.Day IS '날짜'
/

COMMENT ON COLUMN DaySchedule.TIME1 IS '타임1'
/

COMMENT ON COLUMN DaySchedule.TIME2 IS '타임2'
/

COMMENT ON COLUMN DaySchedule.TIME3 IS '타임3'
/

ALTER TABLE DaySchedule
    ADD CONSTRAINT FK_DaySchedule_DEGID_Designer_ FOREIGN KEY (DEGID)
        REFERENCES Designer (ID)
/


-- Designer Table Create SQL
CREATE TABLE MonthSchedule
(
    num        INT             NOT NULL, 
    DEGID      VARCHAR2(30)    NOT NULL, 
    Holiday    DATE            NOT NULL, 
    CONSTRAINT MONTHSCHEDULE_PK PRIMARY KEY (num)
)
/

CREATE SEQUENCE MonthSchedule_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER MonthSchedule_AI_TRG
BEFORE INSERT ON MonthSchedule 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT MonthSchedule_SEQ.NEXTVAL
    INTO :NEW.num
    FROM DUAL;
END;
/

--DROP TRIGGER MonthSchedule_AI_TRG;
/

--DROP SEQUENCE MonthSchedule_SEQ;
/

COMMENT ON TABLE MonthSchedule IS '월간 휴무'
/

COMMENT ON COLUMN MonthSchedule.num IS '식별번호'
/

COMMENT ON COLUMN MonthSchedule.DEGID IS '디자이너 아이디'
/

COMMENT ON COLUMN MonthSchedule.Holiday IS '휴무날짜'
/

ALTER TABLE MonthSchedule
    ADD CONSTRAINT FK_MonthSchedule_DEGID_Designe FOREIGN KEY (DEGID)
        REFERENCES Designer (ID)
/


-- Designer Table Create SQL
CREATE TABLE QNA
(
    NUM        INT              NOT NULL, 
    USERID     VARCHAR2(30)     NOT NULL, 
    TITLE      VARCHAR2(60)     NOT NULL, 
    CONTENT    VARCHAR2(300)    NOT NULL, 
    VIEWCNT    INT              NOT NULL, 
    WRDATE     DATE             NOT NULL, 
    ANSER      VARCHAR2(300)    NULL, 
    ANDATE     DATE             NULL, 
    OPEN       CHAR(1)          NOT NULL, 
    CONSTRAINT QNA_PK PRIMARY KEY (NUM)
)
/

CREATE SEQUENCE QNA_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER QNA_AI_TRG
BEFORE INSERT ON QNA 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT QNA_SEQ.NEXTVAL
    INTO :NEW.NUM
    FROM DUAL;
END;
/

--DROP TRIGGER QNA_AI_TRG;
/

--DROP SEQUENCE QNA_SEQ;
/

COMMENT ON TABLE QNA IS '묻고 답하기'
/

COMMENT ON COLUMN QNA.NUM IS '식별번호'
/

COMMENT ON COLUMN QNA.USERID IS '작성자'
/

COMMENT ON COLUMN QNA.TITLE IS '제목'
/

COMMENT ON COLUMN QNA.CONTENT IS '내용'
/

COMMENT ON COLUMN QNA.VIEWCNT IS '조회수'
/

COMMENT ON COLUMN QNA.WRDATE IS '작성일'
/

COMMENT ON COLUMN QNA.ANSER IS '답변'
/

COMMENT ON COLUMN QNA.ANDATE IS '답변일'
/

COMMENT ON COLUMN QNA.OPEN IS '공개여부'
/

ALTER TABLE QNA
    ADD CONSTRAINT FK_QNA_USERID_USERDATA_ID FOREIGN KEY (USERID)
        REFERENCES USERDATA (ID)
/

